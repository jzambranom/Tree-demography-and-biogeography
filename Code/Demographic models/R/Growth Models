#####################################################################
####              Load libraries             ####
#####################################################################
library(MCMCpack)
library(coda)
library(dplyr)
library(rjags)
library(runjags)
load.module("glm")

#####################################################################
####                       Read in data                          ####
#####################################################################
#Growth data for the Wabikon plot
data_growth <- read.csv("Data/growth_model_data.csv")


#Create column for log transformation of neighborhood range overlap or SES_range_overlap
data_growth <- mutate(data_growth, logSES_range_overlap = log(SES_range_overlap)) %>%
  filter(!is.na(logSES_range_overlap)) 
  
#Create column with species as integer
data_growth$species <- as.integer(as.factor(data_growth$Species))

####Create species level information
spcol <- which(colnames(data_growth) == "species")
##For range overlap
rangecol <- which(colnames(data_growth) == "quantile") 
sp_range <- unique(data_growth[, c(spcol, rangecol)]) %>%
  arrange(species)

##For first trait axis
first_axis <- which(colnames(data_growth) == "first_trait_axis")
sp_first <- unique(data_growth[, c(spcol, first_axis)]) %>%
  arrange(species)

##For second trait axis
second_axis <- which(colnames(data_growth) == "second_trait_axis")
sp_second <- unique(data_growth[, c(spcol, second_axis)]) %>%
  arrange(species)

##########################################################################################
####      Growth model including range quantile, neighborhood metrics and traits    ####
##########################################################################################
#Create list with individual tree and species level data
data_mod1 <- list(nf = nrow(data_growth), ns = nrow(sp_range), 
                  pg = data_growth$rgr, size = data_growth$initial_size, 
                  cnci = data_growth$conspecific_density, hnci = data_growth$heterospecific_density, 
                  overlap = data_growth$logSES_range_overlap, 
                  sp = data_growth$species, quantile = sp_range$quantile, 
                  PC1 = sp_first$first_trait_axis, PC2 = sp_second$second_trait_axis)


n.adapt=10000
n.update=10000
n.iter=25000

mod1 <- jags.model("Code/Demographic models/RJAGS/growth_geography_traits_JAGS.R", data=data_mod1, n.chains=6, n.adapt=n.adapt)
update(mod1, n.update)
results_mod1 <- coda.samples(mod1, c("beta.t", "mubeta", "tau", "sigma"), n.iter=n.iter)
results_dic_mod1 <- dic.samples(mod1, n.iter, "pD") 


##################################################################################
####      Growth model including range quantile and neighborhood metrics    ####
##################################################################################
#Create list with individual tree and species level data
data_mod2 <- list(nf = nrow(data_growth), ns = nrow(sp_range), 
                  pg = data_growth$rgr, size = data_growth$initial_size, 
                  cnci = data_growth$conspecific_density, hnci = data_growth$heterospecific_density, 
                  overlap = data_growth$logSES_range_overlap, 
                  sp = data_growth$species, quantile = sp_range$quantile)


n.adapt=10000
n.update=10000
n.iter=25000

mod2 <- jags.model("Code/Demographic models/RJAGS/growth_geography_JAGS.R", data=data_mod2, n.chains=6, n.adapt=n.adapt)
update(mod2, n.update)
results_mod2 <- coda.samples(mod2, c("beta.t", "mubeta", "tau", "sigma"), n.iter=n.iter)
results_dic_mod2 <- dic.samples(mod2, n.iter, "pD") 



##################################################
####      Growth model including  traits    ####
##################################################
#Create list with individual tree and species level data
data_mod3 <- list(nf = nrow(data_growth), ns = nrow(sp_range), 
                  pg = data_growth$rgr, size = data_growth$initial_size, 
                  cnci = data_growth$conspecific_density, hnci = data_growth$heterospecific_density, 
                  sp = data_growth$species, 
                  PC1 = sp_first$first_trait_axis, PC2 = sp_second$second_trait_axis)


n.adapt=10000
n.update=10000
n.iter=25000

mod3 <- jags.model("Code/Demographic models/RJAGS/growth_traits_JAGS.R", data=data_mod3, n.chains=6, n.adapt=n.adapt)
update(mod3, n.update)
results_mod3 <- coda.samples(mod3, c("beta.t", "mubeta", "tau", "sigma"), n.iter=n.iter)
results_dic_mod3 <- dic.samples(mod3, n.iter, "pD") 

